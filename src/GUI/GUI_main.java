/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import beans.Student;
import daoimplement.daocourseimplement;
import daoimplement.daoresultimplement;
import daoimplement.daostudentimplement;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JPanel;

/**
 *
 * @author Administrator
 */
public class GUI_main extends javax.swing.JFrame {

    /**
     * Creates new form GUI_main
     */
    public GUI_main() {
        initComponents();
         //buttonGroup = new ButtonGroup();
        buttonGroup.add(jRadioStudent);
        buttonGroup.add(jRadioCourse);
        buttonGroup.add(jRadioResults);
        jRadioStudent.setSelected(true);
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jButtonInsert = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDisplayOne = new javax.swing.JButton();
        jButtonDisplayAll = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jRadioStudent = new javax.swing.JRadioButton();
        jRadioCourse = new javax.swing.JRadioButton();
        jRadioResults = new javax.swing.JRadioButton();
        jButtonwritetofile = new javax.swing.JButton();
        jButtonInsertfromfile = new javax.swing.JButton();
        jButtonwritetobinaryfile = new javax.swing.JButton();
        jButtonDisplayGrade = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonInsert.setText("Insert");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDisplayOne.setText("Display one");
        jButtonDisplayOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisplayOneActionPerformed(evt);
            }
        });

        jButtonDisplayAll.setText("Display all");
        jButtonDisplayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisplayAllActionPerformed(evt);
            }
        });

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jRadioStudent.setText("Student");
        jRadioStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioStudentActionPerformed(evt);
            }
        });

        jRadioCourse.setText("Course");

        jRadioResults.setText("Results");

        jButtonwritetofile.setText("Write to file");
        jButtonwritetofile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonwritetofileActionPerformed(evt);
            }
        });

        jButtonInsertfromfile.setText("Insert from File");
        jButtonInsertfromfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertfromfileActionPerformed(evt);
            }
        });

        jButtonwritetobinaryfile.setText("Write to Binary File");
        jButtonwritetobinaryfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonwritetobinaryfileActionPerformed(evt);
            }
        });

        jButtonDisplayGrade.setText("Display Grade");
        jButtonDisplayGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisplayGradeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioResults)
                    .addComponent(jRadioStudent)
                    .addComponent(jRadioCourse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonExit)
                    .addComponent(jButtonDisplayAll)
                    .addComponent(jButtonDisplayOne)
                    .addComponent(jButtonInsert)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonDelete))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonwritetofile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonInsertfromfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonwritetobinaryfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDisplayGrade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonDelete, jButtonDisplayAll, jButtonDisplayOne, jButtonExit, jButtonInsert, jButtonUpdate});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonInsertfromfile, jButtonwritetobinaryfile, jButtonwritetofile});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonInsert)
                            .addComponent(jButtonInsertfromfile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonDelete)
                            .addComponent(jButtonwritetobinaryfile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonUpdate)
                            .addComponent(jButtonwritetofile)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioStudent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioResults)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDisplayOne)
                    .addComponent(jButtonDisplayGrade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDisplayAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButtonExit)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
         System.exit(0);
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        // TODO add your handling code here:
//       // InsertPanel namePanel = new InsertPanel();
//        //namePanel.setVisible(true);
//        InsertFrame namePanel = new InsertFrame();
//        namePanel.setVisible(true);
//        namePanel.setTitle("Insert Data");
//        
//        Toolkit tk = Toolkit.getDefaultToolkit();
//        Dimension d = tk.getScreenSize();
//        namePanel.setLocation((d.width-namePanel.getWidth())/2,(d.height-namePanel.getHeight())/2);

        if (jRadioStudent.isSelected()){
                daostudentimplement daostd = new daostudentimplement();
               // daocourseimplement daocourse = new daocourseimplement();
                //daoresultimplement result = new daoresultimplement();
                Scanner sc = new Scanner(System.in);
                Student std = null; 
                int id;
                String firstname;
                String lastname;
                String gender;
                String date;

                std = new Student();

                System.out.println("Create a new person:");
                System.out.print("ID: "); 
                id = sc.nextInt();
                System.out.print("First Name: ");
                firstname = sc.next();
                System.out.print("Last Name: ");
                lastname = sc.next();
                System.out.print("Gender: ");
                gender = sc.next();
                System.out.print("Date(YY-MM-DD): ");
                date = sc.next();

                std.setStudent_id(id);
                std.setFirstname(firstname);
                std.setLastname(lastname);
                std.setGender(gender);
                std.setStartdate(date);
                try {
                    daostd.insert(std);
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
                }
        }   
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jRadioStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioStudentActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        if (jRadioStudent.isSelected()){
            daostudentimplement daostd = new daostudentimplement();
            Scanner sc = new Scanner(System.in);
            Student std = null; 
            int id;
            
            System.out.print("Delete student that has Id :");
            id = sc.nextInt();
            try {
                daostd.delete(id);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        if (jRadioStudent.isSelected()){
            daostudentimplement daostd = new daostudentimplement();
            Scanner sc = new Scanner(System.in);
            Student std = null; 
            int id;
            String firstname;
            String lastname;
            String gender;
            String date;
                
            System.out.print("Delete student that has Id :");
            id = sc.nextInt();
       
            System.out.print("Enter new firstname: ");
            firstname = sc.next();
            System.out.print("Enter new lastname: ");
            lastname = sc.next();
            System.out.print("Enter new gender: ");
            gender = sc.next();

            std = new Student(id,firstname,lastname,gender,"");
            try {
                daostd.update(std);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDisplayOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisplayOneActionPerformed
        if (jRadioStudent.isSelected()){
            daostudentimplement daostd = new daostudentimplement();
            Scanner sc = new Scanner(System.in);
            Student std = null; 
            
            System.out.print("ID of student: "); 
            int id = sc.nextInt();
                    //std = daostd.selectById(id);
            try {
                std = (Student) daostd.selectById(id); //test using Object class
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }               
                    //System.out.println("ID = " + id + "\nName = " + std.getFirstname());      
            System.out.println(std);
            
        }
    }//GEN-LAST:event_jButtonDisplayOneActionPerformed

    private void jButtonDisplayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisplayAllActionPerformed
         if (jRadioStudent.isSelected()){
            daostudentimplement daostd = new daostudentimplement();
            
            List<Object> students = new ArrayList<>();     
                    
             try {  
                 students = daostd.select();
             } catch (SQLException | ClassNotFoundException ex) {
                 Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
             }
                    
             for (Object p:students)
                  System.out.println(p);
            
            
         }
    }//GEN-LAST:event_jButtonDisplayAllActionPerformed

    private void jButtonwritetofileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonwritetofileActionPerformed
        
         
               // 
                //
        if (jRadioStudent.isSelected()){
            daostudentimplement daostd = new daostudentimplement();
            try {
                daostd.write_to_file("C:/Test3/student.txt");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        if (jRadioCourse.isSelected()){
            daocourseimplement daocourse = new daocourseimplement();
            try {
                daocourse.write_to_file("C:/Test3/course.txt");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jRadioResults.isSelected()){
            daoresultimplement result = new daoresultimplement();
            try {
                result.write_to_file("C:/Test3/result.txt");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }//GEN-LAST:event_jButtonwritetofileActionPerformed

    private void jButtonInsertfromfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertfromfileActionPerformed
       if (jRadioStudent.isSelected()){
           daostudentimplement daostd = new daostudentimplement();
           try {
               daostd.insert_from_file("C:/Test/java/student.txt");
           } catch (SQLException | ClassNotFoundException ex) {
               Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
        if (jRadioCourse.isSelected()){
            daocourseimplement daocourse = new daocourseimplement();
           try {
               daocourse.insert_from_file("C:/Test/java/course.txt");
           } catch (SQLException | ClassNotFoundException ex) {
               Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        if (jRadioResults.isSelected()){
            daoresultimplement result = new daoresultimplement();
           try {
               result.insert_from_file("C:/Test/java/results.txt");
           } catch (SQLException | ClassNotFoundException ex) {
               Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
           }
        
        }
        
    }//GEN-LAST:event_jButtonInsertfromfileActionPerformed

    private void jButtonwritetobinaryfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonwritetobinaryfileActionPerformed
        if (jRadioStudent.isSelected()){
            daostudentimplement student = new daostudentimplement();
            try {
                student.write_to_BinaryFile("C:/Test3/binary_student.txt");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if (jRadioCourse.isSelected()){
            daocourseimplement course = new daocourseimplement();
            try {
                course.write_to_BinaryFile("C:/Test3/binary_course.txt");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        if (jRadioResults.isSelected()){
            daoresultimplement result = new daoresultimplement();
            try {
                result.write_to_BinaryFile("C:/Test3/binary_result.txt");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }//GEN-LAST:event_jButtonwritetobinaryfileActionPerformed

    private void jButtonDisplayGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisplayGradeActionPerformed
         daostudentimplement student = new daostudentimplement();
        try {
            student.displayGrade();
        } catch (SQLException ex) {
            Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUI_main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonDisplayGradeActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                GUI_main gui = new GUI_main();
                gui.setVisible(true);
                gui.setTitle("Student Project");
                 //Set window in the center
                Toolkit tk = Toolkit.getDefaultToolkit();
                Dimension d = tk.getScreenSize();
                gui.setLocation((d.width-gui.getWidth())/2,(d.height-gui.getHeight())/2);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDisplayAll;
    private javax.swing.JButton jButtonDisplayGrade;
    private javax.swing.JButton jButtonDisplayOne;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonInsertfromfile;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtonwritetobinaryfile;
    private javax.swing.JButton jButtonwritetofile;
    private javax.swing.JRadioButton jRadioCourse;
    private javax.swing.JRadioButton jRadioResults;
    private javax.swing.JRadioButton jRadioStudent;
    // End of variables declaration//GEN-END:variables

     
    
    
}
